import subprocess
import os
import re

# Function to strip ANSI codes from the text
def strip_ansi_codes(text):
    ansi_escape = re.compile(r'\x1B[@-_][0-?]*[ -/]*[@-~]')
    return ansi_escape.sub('', text)

# Function to run sqlmap on a given URL
def run_sqlmap(url, append=False, report_file='attack_reports/sqlmap.txt'):
    command = ['sqlmap', '-u', url, '--batch']
    process = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    stdout, stderr = process.communicate()
    
    if process.returncode != 0:
        print(f"An error occurred while running SQLMap on {url}:\n{stderr.decode('utf-8')}")
    else:
        mode = 'a' if append else 'w'
        with open(report_file, mode) as file:
            file.write(url + "\n")
            file.write(strip_ansi_codes(stdout.decode('utf-8')))
            file.write("\n")
        

# Function to read URLs from dirsearch.txt if it exists and run sqlmap on each
def run_sqlmap_from_input(input_data, dirsearch_file='scan_reports/dirsearch.txt'):
    print("Starting sqlmap attacks")
    urls = []

    # Read URLs from dirsearch.txt if it exists
    if os.path.isfile(dirsearch_file):
        with open(dirsearch_file, 'r') as file:
            urls = file.readlines()
        # Filter URLs to include only those with query parameters
        urls = [url.strip() for url in urls if '?' in url and '=' in url]
    else:
        # If dirsearch.txt does not exist or contains no valid URLs, use input_data
        if isinstance(input_data, str):
            if os.path.isfile(input_data):
                with open(input_data, 'r') as file:
                    urls = file.readlines()
            else:
                urls = [input_data]
        elif isinstance(input_data, list):
            urls = input_data

    # If no valid URLs found, use default URL pattern
    if not urls:
        urls = input_data if isinstance(input_data, list) else [input_data]

    for i, url in enumerate(urls):
        url = url.strip()
        if url:
            # Prepend http:// if the URL does not start with http:// or https://
            if not (url.startswith('http://') or url.startswith('https://')):
                url = 'http://' + url
            
            # Append a parameter if it does not already contain one and it's not from dirsearch.txt
            if '?' not in url and dirsearch_file not in url:
                url = url.rstrip('/') + '/index.php?id=1'
            
            append = i > 0
            run_sqlmap(url, append)
    print("Finished sqlmap attacks")


